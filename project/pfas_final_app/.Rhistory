theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank())
#create breaks using the quantile method with 5 classes
breaks_qt <- classIntervals(c(min(county_population$chng_2021) - .00001, county_population$chng_2021), n = 5, style = "quantile")
#use cut() and the breaks we created to make a classed variable
county_population <- county_population %>%
mutate(chng_2021_cat = factor(cut(chng_2021, breaks = breaks_qt$brks)))
#classed choropleth map
ggplot() +
geom_sf(data= county_population, aes(fill=chng_2021_cat)) +
scale_fill_viridis_d() + #you need a discrete color scale here, or you can specify your own colors
labs(title = "Population Change in Minnesota Counties from 2020 to 2021", fill = "Percent Change in Population")+
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank())
# domestic and public drinking wells with at least one sample
stationList <- read_csv("https://services.pca.state.mn.us/api/v1/groundwater/monitoring-stations?stationType=Well&format=csv") %>%
filter(stationPurpose %in% c("Domestic Drinking", "Public Drinking"), sampleCount>0)
# domestic and public drinking wells with at least one sample
stationList <- read_csv("https://services.pca.state.mn.us/api/v1/groundwater/monitoring-stations?stationType=Well&format=csv") %>%
filter(stationPurpose %in% c("Domestic Drinking", "Public Drinking"), sampleCount>0)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(sf)
library(tidycensus)
library(USAboundaries)
library(classInt)
library(ggsflabel)
library(ggspatial)
# domestic and public drinking wells with at least one sample
stationList <- read_csv("https://services.pca.state.mn.us/api/v1/groundwater/monitoring-stations?stationType=Well&format=csv") %>%
filter(stationPurpose %in% c("Domestic Drinking", "Public Drinking"), sampleCount>0)
shiny::runApp('Desktop/STAT 456/exercises/ShinyBasics_WillMichael/shiny_1')
runApp('Desktop/STAT 456/exercises/ShinyBasics_WillMichael/my_shiny')
runApp('Desktop/STAT 456/exercises/ShinyBasics_WillMichael/my_shiny')
knitr::opts_chunk$set(echo = TRUE)
library(readr)
read_csv('scorecard_clean.csv')
library(readr)
read_csv('my_shiny/scorecard_clean.csv')
runApp('Desktop/STAT 456/exercises/ShinyBasics_WillMichael/my_shiny')
runApp('Desktop/STAT 456/exercises/ShinyBasics_WillMichael/my_shiny')
devtools::install_github("yutannihilation/ggsflabel")
library(ggsflabel)
#read in fecal coliform bacteria concentration data
miss_river_fcb <- read_csv('miss_fcb.csv') %>%
st_as_sf(coords = c("long", "lat"), crs = "+proj=longlat +datum=NAD83")
#read in state border data
mn_wi_states <- us_states(resolution = "high", states = c("Minnesota", "Wisconsin")) %>%
st_transform(crs = "NAD83") %>%
mutate(x_nudge = case_when(state_name == 'Minnesota' ~ 1,
state_name == 'Wisconsin' ~ -1),
y_nudge = case_when(state_name == 'Minnesota' ~ -1.7,
state_name == 'Wisconsin' ~ 0))
#read in city location data
mn_twin_cities <- read_sf('shp_loc_pop_centers') %>%
filter(Name %in% c("Minneapolis", "St. Paul")) %>%
st_transform(crs = "NAD83") %>%
mutate(x_nudge = case_when(Name == 'Minneapolis' ~ 0,
Name == 'St. Paul' ~ .1),
y_nudge = case_when(Name == 'Minneapolis' ~ .05,
Name == 'St. Paul' ~ .05))
#county data
counties <- us_counties(resolution = "high", states = c("Minnesota", "Wisconsin")) %>%
st_transform(crs = "NAD83")
#river shapefile
rivers <- read_sf('shp_water_lakes_rivers')
#title lengend
legend_title <- "FCB per 100 mL"
ggplot() +
geom_sf(data = counties, color = "navajowhite", fill = "ivory", size = 0.5) + #add countiy boundaries
geom_sf(data = mn_wi_states, color = "tan3", fill = "NA") + #add state boundaries
geom_sf(data = mn_twin_cities, color = "black", size = 3, shape= 15) + #add twin cities
geom_sf(data = rivers %>% filter(NAME_DNR == "Mississippi"),color = "NA", fill = 'cornflowerblue') +  #add river
geom_sf_label_repel(data = mn_twin_cities, aes(label = Name), nudge_x = mn_twin_cities$x_nudge, nudge_y=mn_twin_cities$y_nudge) + #add city labels
geom_sf(data = miss_river_fcb, mapping = aes(color = fct_reorder(NA2Cat, NA2)), size = 2.5)+ #add thematic layer -- Fecal coliform levels
scale_color_manual(legend_title, values = c("mediumseagreen", "gold", "orange1","red2"))+ #color scheme and legend title
coord_sf(xlim = c(-93.41, -92.1), ylim= c(44.4, 45.2)) + #zoom
geom_sf_text_repel(data = mn_wi_states, min.segment.length = Inf, color = "tan3", aes(label = state_name), size = 5, nudge_y = mn_wi_states$y_nudge, nudge_x = mn_wi_states$x_nudge)+ #add state labels
labs(x = "", y = "", title = "Fecal Coliform Bacteria (FCB) Levels in the Mississippi River", subtitle = "Data from 2019 and 2020 at 34 monitoring stations in Southeastern Minnesota", caption = "Plot by Vivian Powell | Data from Metropolitan Council EIMS") +
annotation_scale(location = "bl")+ #add scale bar (from `ggspatial` package)
theme_classic() +
theme(legend.position = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.box.background = element_rect(color="black", size=1), #create a legend rectangle with a black border
legend.text = element_text(size = 7),legend.title = element_text(size = 8, face = "bold"),
plot.title = element_text(face = "bold", hjust = 0.5), plot.subtitle = element_text(hjust = 0.5),plot.caption = element_text(hjust = 0.5),axis.line=element_blank(),axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggplot() +
geom_sf(data = counties, color = "navajowhite", fill = "ivory", size = 0.5) + #add countiy boundaries
geom_sf(data = mn_wi_states, color = "tan3", fill = "NA") + #add state boundaries
geom_sf(data = mn_twin_cities, color = "black", size = 3, shape= 15) + #add twin cities
geom_sf(data = rivers %>% filter(NAME_DNR == "Mississippi"),color = "NA", fill = 'cornflowerblue') +  #add river
geom_sf_label_repel(data = mn_twin_cities, aes(label = Name), nudge_x = mn_twin_cities$x_nudge, nudge_y=mn_twin_cities$y_nudge) + #add city labels
geom_sf(data = miss_river_fcb, mapping = aes(color = fct_reorder(NA2Cat, NA2)), size = 2.5)+ #add thematic layer -- Fecal coliform levels
scale_color_manual(legend_title, values = c("mediumseagreen", "gold", "orange1","red2"))+ #color scheme and legend title
coord_sf(xlim = c(-93.41, -92.1), ylim= c(44.4, 45.2)) + #zoom
geom_sf_text_repel(data = mn_wi_states, min.segment.length = Inf, color = "tan3", aes(label = state_name), size = 5, nudge_y = mn_wi_states$y_nudge, nudge_x = mn_wi_states$x_nudge)+ #add state labels
labs(x = "", y = "", title = "Fecal Coliform Bacteria (FCB) Levels in the Mississippi River", subtitle = "Data from 2019 and 2020 at 34 monitoring stations in Southeastern Minnesota", caption = "Plot by Vivian Powell | Data from Metropolitan Council EIMS") +
annotation_scale(location = "bl")+ #add scale bar (from `ggspatial` package)
theme_classic() +
theme(legend.position = c(.95, .95),
legend.justification = c("right", "top"),
#    legend.box.just = "right",
legend.box.background = element_rect(color="black", size=1), #create a legend rectangle with a black border
legend.text = element_text(size = 7),legend.title = element_text(size = 8, face = "bold"),
plot.title = element_text(face = "bold", hjust = 0.5), plot.subtitle = element_text(hjust = 0.5),plot.caption = element_text(hjust = 0.5),axis.line=element_blank(),axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggplot() +
geom_sf(data = counties, color = "navajowhite", fill = "ivory", size = 0.5) + #add countiy boundaries
geom_sf(data = mn_wi_states, color = "tan3", fill = "NA") + #add state boundaries
geom_sf(data = mn_twin_cities, color = "black", size = 3, shape= 15) + #add twin cities
geom_sf(data = rivers %>% filter(NAME_DNR == "Mississippi"),color = "NA", fill = 'cornflowerblue') +  #add river
geom_sf_label_repel(data = mn_twin_cities, aes(label = Name), nudge_x = mn_twin_cities$x_nudge, nudge_y=mn_twin_cities$y_nudge) + #add city labels
geom_sf(data = miss_river_fcb, mapping = aes(color = fct_reorder(NA2Cat, NA2)), size = 2.5)+ #add thematic layer -- Fecal coliform levels
scale_color_manual(legend_title, values = c("mediumseagreen", "gold", "orange1","red2"))+ #color scheme and legend title
coord_sf(xlim = c(-93.41, -92.1), ylim= c(44.4, 45.2)) + #zoom
geom_sf_text_repel(data = mn_wi_states, min.segment.length = Inf, color = "tan3", aes(label = state_name), size = 5, nudge_y = mn_wi_states$y_nudge, nudge_x = mn_wi_states$x_nudge)+ #add state labels
labs(x = "", y = "", title = "Fecal Coliform Bacteria (FCB) Levels in the Mississippi River", subtitle = "Data from 2019 and 2020 at 34 monitoring stations in Southeastern Minnesota", caption = "Plot by Vivian Powell | Data from Metropolitan Council EIMS") +
annotation_scale(location = "bl")+ #add scale bar (from `ggspatial` package)
theme_classic() +
theme(legend.position = c(.95, .95),
#    legend.justification = c("right", "top"), #place legend at top right of plot
legend.box.background = element_rect(color="black", size=1), #create a legend rectangle with a black border
legend.text = element_text(size = 7),legend.title = element_text(size = 8, face = "bold"),
plot.title = element_text(face = "bold", hjust = 0.5), plot.subtitle = element_text(hjust = 0.5),plot.caption = element_text(hjust = 0.5),axis.line=element_blank(),axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggplot() +
geom_sf(data = counties, color = "navajowhite", fill = "ivory", size = 0.5) + #add countiy boundaries
geom_sf(data = mn_wi_states, color = "tan3", fill = "NA") + #add state boundaries
geom_sf(data = mn_twin_cities, color = "black", size = 3, shape= 15) + #add twin cities
geom_sf(data = rivers %>% filter(NAME_DNR == "Mississippi"),color = "NA", fill = 'cornflowerblue') +  #add river
geom_sf_label_repel(data = mn_twin_cities, aes(label = Name), nudge_x = mn_twin_cities$x_nudge, nudge_y=mn_twin_cities$y_nudge) + #add city labels
geom_sf(data = miss_river_fcb, mapping = aes(color = fct_reorder(NA2Cat, NA2)), size = 2.5)+ #add thematic layer -- Fecal coliform levels
scale_color_manual(legend_title, values = c("mediumseagreen", "gold", "orange1","red2"))+ #color scheme and legend title
coord_sf(xlim = c(-93.41, -92.1), ylim= c(44.4, 45.2)) + #zoom
geom_sf_text_repel(data = mn_wi_states, min.segment.length = Inf, color = "tan3", aes(label = state_name), size = 5, nudge_y = mn_wi_states$y_nudge, nudge_x = mn_wi_states$x_nudge)+ #add state labels
labs(x = "", y = "", title = "Fecal Coliform Bacteria (FCB) Levels in the Mississippi River", subtitle = "Data from 2019 and 2020 at 34 monitoring stations in Southeastern Minnesota", caption = "Plot by Vivian Powell | Data from Metropolitan Council EIMS") +
annotation_scale(location = "bl")+ #add scale bar (from `ggspatial` package)
theme_classic() +
theme(#legend.position = c(.95, .95),
legend.justification = c("right", "top"), #place legend at top right of plot
legend.box.background = element_rect(color="black", size=1), #create a legend rectangle with a black border
legend.text = element_text(size = 7),legend.title = element_text(size = 8, face = "bold"),
plot.title = element_text(face = "bold", hjust = 0.5), plot.subtitle = element_text(hjust = 0.5),plot.caption = element_text(hjust = 0.5),axis.line=element_blank(),axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggplot() +
geom_sf(data = counties, color = "navajowhite", fill = "ivory", size = 0.5) + #add countiy boundaries
geom_sf(data = mn_wi_states, color = "tan3", fill = "NA") + #add state boundaries
geom_sf(data = mn_twin_cities, color = "black", size = 3, shape= 15) + #add twin cities
geom_sf(data = rivers %>% filter(NAME_DNR == "Mississippi"),color = "NA", fill = 'cornflowerblue') +  #add river
geom_sf_label_repel(data = mn_twin_cities, aes(label = Name), nudge_x = mn_twin_cities$x_nudge, nudge_y=mn_twin_cities$y_nudge) + #add city labels
geom_sf(data = miss_river_fcb, mapping = aes(color = fct_reorder(NA2Cat, NA2)), size = 2.5)+ #add thematic layer -- Fecal coliform levels
scale_color_manual(legend_title, values = c("mediumseagreen", "gold", "orange1","red2"))+ #color scheme and legend title
coord_sf(xlim = c(-93.41, -92.1), ylim= c(44.4, 45.2)) + #zoom
geom_sf_text_repel(data = mn_wi_states, min.segment.length = Inf, color = "tan3", aes(label = state_name), size = 5, nudge_y = mn_wi_states$y_nudge, nudge_x = mn_wi_states$x_nudge)+ #add state labels
labs(x = "", y = "", title = "Fecal Coliform Bacteria (FCB) Levels in the Mississippi River", subtitle = "Data from 2019 and 2020 at 34 monitoring stations in Southeastern Minnesota", caption = "Plot by Vivian Powell | Data from Metropolitan Council EIMS") +
annotation_scale(location = "bl")+ #add scale bar (from `ggspatial` package)
theme_classic() +
theme(legend.position = c(.95, .95),
legend.justification = c("right", "top"), #place legend at top right of plot
legend.box.background = element_rect(color="black", size=1), #create a legend rectangle with a black border
legend.text = element_text(size = 7),legend.title = element_text(size = 8, face = "bold"),
plot.title = element_text(face = "bold", hjust = 0.5), plot.subtitle = element_text(hjust = 0.5),plot.caption = element_text(hjust = 0.5),axis.line=element_blank(),axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
?legend.justification
??legend.justification
?theme()
ggplot() +
geom_sf(data = counties, color = "navajowhite", fill = "ivory", size = 0.5) + #add countiy boundaries
geom_sf(data = mn_wi_states, color = "tan3", fill = "NA") + #add state boundaries
geom_sf(data = mn_twin_cities, color = "black", size = 3, shape= 15) + #add twin cities
geom_sf(data = rivers %>% filter(NAME_DNR == "Mississippi"),color = "NA", fill = 'cornflowerblue') +  #add river
geom_sf_label_repel(data = mn_twin_cities, aes(label = Name), nudge_x = mn_twin_cities$x_nudge, nudge_y=mn_twin_cities$y_nudge) + #add city labels
geom_sf(data = miss_river_fcb, mapping = aes(color = fct_reorder(NA2Cat, NA2)), size = 2.5)+ #add thematic layer -- Fecal coliform levels
scale_color_manual(legend_title, values = c("mediumseagreen", "gold", "orange1","red2"))+ #color scheme and legend title
coord_sf(xlim = c(-93.41, -92.1), ylim= c(44.4, 45.2)) + #zoom
geom_sf_text_repel(data = mn_wi_states, min.segment.length = Inf, color = "tan3", aes(label = state_name), size = 5, nudge_y = mn_wi_states$y_nudge, nudge_x = mn_wi_states$x_nudge)+ #add state labels
labs(x = "", y = "", title = "Fecal Coliform Bacteria (FCB) Levels in the Mississippi River", subtitle = "Data from 2019 and 2020 at 34 monitoring stations in Southeastern Minnesota", caption = "Plot by Vivian Powell | Data from Metropolitan Council EIMS") +
annotation_scale(location = "bl")+ #add scale bar (from `ggspatial` package)
theme_classic() +
theme(legend.position = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.background = element_rect(color="black", size=1), #create a legend rectangle with a black border
legend.text = element_text(size = 7),legend.title = element_text(size = 8, face = "bold"),
plot.title = element_text(face = "bold", hjust = 0.5), plot.subtitle = element_text(hjust = 0.5),plot.caption = element_text(hjust = 0.5),axis.line=element_blank(),axis.text=element_blank(),
axis.ticks=element_blank())
mn_counties <- mn_counties %>%
st_transform(crs = "NAD83")
library(tidyverse)
library(dplyr)
library(sf)
library(tidycensus)
library(USAboundaries)
library(classInt)
library(ggspatial)
mn_cities <- read_sf('shp_loc_pop_centers')
st_crs(mn_cities)
mn_cities <- mn_cities %>%
st_transform(crs = "NAD83")
st_crs$GEOGCRS(mn_cities)
#read data
population <- read_csv("PopulationReport.csv")
#clean data
colnames(population) <- population[1,]
population <- population[-c(1:2, 90:92),]
names_pop <- names(population)
names(population)[names_pop == 'NA'] <- c("NA1", "NA2")
population <- population %>%
select(-c(NA1, NA2))
#join with county boundary data
county_population <- mn_counties %>%
left_join(population, by = join_by(geoid == 'FIPS*')) %>% #when joining a spatial and a non-spatial dataset, the spatial one should always come first! Here, that's our "mn_counties" data
select(`County name`, geometry, `Change 2020-21`) %>%
mutate(chng_2021 = as.numeric(gsub("%", "",`Change 2020-21`)))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(sf)
library(tidycensus)
library(USAboundaries)
library(classInt)
library(ggspatial)
mn_cities <- read_sf('shp_loc_pop_centers')
st_crs(mn_cities)
mn_cities <- mn_cities %>%
st_transform(crs = "NAD83")
st_crs(mn_cities)
#load data
mn_counties <- us_counties(resolution = "high", states = "Minnesota")
#clean out duplicate column names so we can filter later
names_counties <- names(mn_counties)
names(mn_counties)[names_counties == 'state_name'] <- c("state_name1", "state_name2")
#check CRS
st_crs(mn_counties)
mn_counties <- mn_counties %>%
st_transform(crs = "NAD83")
st_crs(mn_counties)
ggplot() + #plot frame
geom_sf(data = mn_counties) + #county boundary layer
geom_sf(data = mn_cities) #city point layer
ggplot() +
geom_sf(data = mn_counties, fill = 'wheat', color = "tan") + #establishing my counties basemap
geom_sf(data = mn_cities %>% filter(Population >= 5000), mapping = aes(color = Population), alpha = 0.8)+ #cities layer
scale_color_viridis_c() + #continuous (gradient) color scale
labs(title = "Minnesota Cities with Population >= 5,000") +
theme_classic() +
theme(axis.line=element_blank(), #remove axis lines
axis.text=element_blank(), #remove axis text (latitudes and longitudes)
axis.ticks=element_blank()) #remove axis tick marks
ggplot() +
geom_sf(data = mn_counties %>%
filter(name %in% c("Anoka", "Hennepin", "Ramsey", "Dakota", "Carver", "Washington", "Scott") ), fill = 'wheat', color = "tan") +
geom_sf(data = mn_cities %>% filter(Population >= 5000), mapping = aes(color = Population), alpha = 0.8)+
scale_color_viridis_c() +
labs(title = "Minnesota Cities with Population >= 5,000") +
theme_classic() +
theme(axis.line=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
cities_7countyarea <- st_crop(mn_cities,st_bbox(mn_counties %>% filter(name %in% c("Anoka", "Hennepin", "Ramsey", "Dakota", "Carver", "Washington", "Scott"))))
ggplot() +
geom_sf(data = mn_counties %>%
filter(name %in% c("Anoka", "Hennepin", "Ramsey", "Dakota", "Carver", "Washington", "Scott") ), fill = 'wheat', color = "tan") +
geom_sf(data = cities_7countyarea %>% filter(Population >= 5000), mapping = aes(color = Population))+
scale_color_viridis_c() +
labs(title = "Minnesota Cities with Population >= 5,000") +
theme_classic() +
theme(axis.line=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
#read data
population <- read_csv("PopulationReport.csv")
#clean data
colnames(population) <- population[1,]
population <- population[-c(1:2, 90:92),]
names_pop <- names(population)
names(population)[names_pop == 'NA'] <- c("NA1", "NA2")
population <- population %>%
select(-c(NA1, NA2))
#join with county boundary data
county_population <- mn_counties %>%
left_join(population, by = join_by(geoid == 'FIPS*')) %>% #when joining a spatial and a non-spatial dataset, the spatial one should always come first! Here, that's our "mn_counties" data
select(`County name`, geometry, `Change 2020-21`) %>%
mutate(chng_2021 = as.numeric(gsub("%", "",`Change 2020-21`)))
ggplot() +
geom_sf(data= county_population, aes(fill=chng_2021)) +
scale_fill_viridis_c() +
labs(title = "Population Change in Minnesota Counties from 2020 to 2021", fill = "Percent Change in Population")+
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank())
#create breaks using the quantile method with 5 classes
breaks_qt <- classIntervals(c(min(county_population$chng_2021) - .00001, county_population$chng_2021), n = 5, style = "quantile")
#use cut() and the breaks we created to make a classed variable
county_population <- county_population %>%
mutate(chng_2021_cat = factor(cut(chng_2021, breaks = breaks_qt$brks)))
#classed choropleth map
ggplot() +
geom_sf(data= county_population, aes(fill=chng_2021_cat)) +
scale_fill_viridis_d() + #you need a discrete color scale here, or you can specify your own colors
labs(title = "Population Change in Minnesota Counties from 2020 to 2021", fill = "Percent Change in Population")+
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank())
# domestic and public drinking wells with at least one sample
stationList <- read_csv("https://services.pca.state.mn.us/api/v1/groundwater/monitoring-stations?stationType=Well&format=csv") %>%
filter(stationPurpose %in% c("Domestic Drinking", "Public Drinking"), sampleCount>0)
# county boundaries for minnesota
county_boundaries <- st_read("shp_bdry_counties_in_minnesota/mn_county_boundaries_500.shp")
# clean well data
station_points <- stationList %>%
filter(lat > 0, long <0) %>% # remove wells with a missing latitude and longitude
st_as_sf(coords = c("long", "lat"), crs = "NAD83")
# check CRS of station_points: NAD83
st_crs(station_points)
st_crs(county_boundaries) # need to be transformed
# transform county boundaries to NAD83
county_boundaries <- st_transform(county_boundaries, crs = "NAD83")
joined <- st_join(station_points, county_boundaries)
head(joined)
stations_per_county <- joined %>%
st_drop_geometry() %>% #removes geometry - makes calculation more efficient
group_by(CTY_NAME) %>%
count()
head(stations_per_county)
#classed choropleth map
ggplot() +
geom_sf(data= county_population, aes(fill=chng_2021_cat), color = "") + #add your data and specify aesthetics in the same way as for an unclassed map
scale_fill_viridis_d() + #you need a discrete color scale here, or you can specify your own colors
labs(title = "Population Change in Minnesota Counties from 2020 to 2021", fill = "Percent Change in Population")+
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank())
ggplot() +
geom_sf(data= subset(stations_per_county_geo, n<1000), aes(fill=n)) +
scale_fill_gradientn(colours = c("lightcyan", "lightcyan2", "lightskyblue3", "lightskyblue4"))+
geom_sf(data = subset(stations_per_county_geo, n>1000),aes(color=high_wells), fill = "dodgerblue4")+
geom_sf(data = roads, fill = "gray",color = "gray", lwd= 0.2)+ #adding the shape file in this line
labs(fill = "Wells", color = "", title = "Number of domestic/public drinking wells by Minnesota county", subtitle= "with at least one MPCA sample since 1988")+
theme_classic()+
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
plot.title.position = "plot",
plot.title = element_text(size = 8),
plot.subtitle = element_text(size = 8))
#classed choropleth map
ggplot() +
geom_sf(data= county_population, aes(fill=chng_2021_cat, color = chng_2021_cat)) + #add your data and specify aesthetics in the same way as for an unclassed map
scale_fill_viridis_d() + #you need a discrete color scale here, or you can specify your own colors
labs(title = "Population Change in Minnesota Counties from 2020 to 2021", fill = "Percent Change in Population")+
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank())
#classed choropleth map
ggplot() +
geom_sf(data= county_population, aes(fill=chng_2021_cat)) + #add your data and specify aesthetics in the same way as for an unclassed map
scale_fill_viridis_d() + #you need a discrete color scale here, or you can specify your own colors
labs(title = "Population Change in Minnesota Counties from 2020 to 2021", fill = "Percent Change in Population")+
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank())
#classed choropleth map
ggplot() +
geom_sf(data= county_population, aes(fill=chng_2021_cat), color = "white") + #add your data and specify aesthetics in the same way as for an unclassed map
scale_fill_viridis_d() + #you need a discrete color scale here, or you can specify your own colors
labs(title = "Population Change in Minnesota Counties from 2020 to 2021", fill = "Percent Change in Population")+
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank())
#classed choropleth map
ggplot() +
geom_sf(data= county_population, aes(fill=chng_2021_cat), color = "black) + #add your data and specify aesthetics in the same way as for an unclassed map
scale_fill_viridis_d() + #you need a discrete color scale here, or you can specify your own colors
labs(title = "Population Change in Minnesota Counties from 2020 to 2021", fill = "Percent Change in Population")+
#classed choropleth map
ggplot() +
geom_sf(data= county_population, aes(fill=chng_2021_cat), color = "black") + #add your data and specify aesthetics in the same way as for an unclassed map
scale_fill_viridis_d() + #you need a discrete color scale here, or you can specify your own colors
labs(title = "Population Change in Minnesota Counties from 2020 to 2021", fill = "Percent Change in Population")+
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank())
#classed choropleth map
ggplot() +
geom_sf(data= county_population, aes(fill=chng_2021_cat), color = "grey") + #add your data and specify aesthetics in the same way as for an unclassed map
scale_fill_viridis_d() + #you need a discrete color scale here, or you can specify your own colors
labs(title = "Population Change in Minnesota Counties from 2020 to 2021", fill = "Percent Change in Population")+
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank())
#classed choropleth map
ggplot() +
geom_sf(data= county_population, aes(fill=chng_2021_cat)) + #add your data and specify aesthetics in the same way as for an unclassed map
scale_fill_viridis_d() + #you need a discrete color scale here, or you can specify your own colors
labs(title = "Population Change in Minnesota Counties from 2020 to 2021", fill = "Percent Change in Population")+
theme_classic() +
theme(axis.line = element_blank(), axis.text = element_blank(), axis.ticks = element_blank())
census_api_key("f0d9e7b9eb0a91da1b9d33277cf20e264c19e197", install = TRUE, overwrite=TRUE)
census2020 <- get_acs(year = 2020, state = "MN", geography = "tract", variables = c(
"B01003_001", "B19013_001", "B23006_023", "B25058_001", "B25107_001", "B25003_001", "B25003_002", "B25003_003", "B25077_001"), output = 'wide', geometry = TRUE) %>%
filter(word(NAME, 4) %in% c("Ramsey", "Hennepin"))%>%
mutate(tract = word(NAME, 3),
tract = str_remove(tract, ","),
county = word(NAME, 4)) %>%
select(-NAME) %>%
rename("population" = "B01003_001E",
"medianIncome" = "B19013_001E",
"bachelors" = "B23006_023E",
"medContractRent" = "B25058_001E",
"tenureTotal" = "B25003_001E",
"tenureOwned" = "B25003_002E",
"tenureRented" = "B25003_003E",
"medianHomeValue"= "B25077_001E") %>%
select(-contains("_"))
crashes <- read_csv("Pedestrian_and_Bike_Crash_Dataset__.csv") %>%
filter(!is.na(Latitude), !is.na(Longitude))
View(census2020)
knitr::opts_chunk$set(echo = TRUE, eval=FALSE, message=FALSE, warning=FALSE)
correlated %>%
ggplot(aes(x=age, y=exercise))+
geom_point()+
theme_classic()+
labs(title = "Age vs exercise strong correlation")+
theme(plot.title.position = "plot",
plot.title = element_text(family = "mono"),
axis.title = element_text(family="mono"))
library(tidyverse)
correlated = data.frame(exercise = c(10, 15, 15,20,25,25, 40,45,50,50,60, 60, 60, 70, 70, 100, 120,120, 180, 200),
age = c(80, 75, 72, 70, 70, 65, 50, 50, 45, 42, 42, 37, 35, 33, 30, 25, 24, 22, 20, 20)) %>%
mutate(risk = 10+age-0.6*exercise+rnorm(20, mean=0, sd=3))
med_cor = data.frame(exercise = c(25, 40, 60,50,15,60, 50,45,25,120,20, 10, 15, 180, 60, 100, 70,70, 120, 200),
age = c(80, 75, 72, 70, 70, 65, 50, 50, 45, 42, 42, 37, 35, 33, 30, 25, 24, 22, 20, 20)) %>%
mutate(risk = 10+age-0.6*exercise+rnorm(20, mean=0, sd=3))
set.seed(121)
exercise = c(15, 40, 10,20,15,60, 25,45,25,70,50, 60, 50, 180, 60, 100, 70,120, 120, 200)
age = c(80, 75, 72, 70, 70, 65, 50, 50, 45, 42, 42, 37, 35, 33, 30, 25, 24, 22, 20, 20)
random = data.frame(exercise = sample(exercise),age=sample(age)) %>%
mutate(risk = 10+age-0.6*exercise+rnorm(20, mean=0, sd=3))
correlated %>%
ggplot(aes(x=age, y=exercise))+
geom_point()+
theme_classic()+
labs(title = "Age vs exercise strong correlation")+
theme(plot.title.position = "plot",
plot.title = element_text(family = "mono"),
axis.title = element_text(family="mono"))
med_cor %>%
ggplot(aes(x=age, y=exercise))+
geom_point()+
theme_classic()+
labs(title = "Age vs exercise medium correlation")+
theme(plot.title.position = "plot",
plot.title = element_text(family = "mono"),
axis.title = element_text(family="mono"))
random %>%
ggplot(aes(x=age, y=exercise))+
geom_point()+
theme_classic()+
labs(title = "Age vs exercise random correlation")+
theme(plot.title.position = "plot",
plot.title = element_text(family = "mono"),
axis.title = element_text(family="mono"))
#exercise vs risk correlated
correlated %>%
ggplot(aes(x=exercise, y=risk))+
geom_point()+
theme_classic()+
labs(title = "Exercise vs heart disease risk")+
theme(plot.title.position = "plot",
plot.title = element_text(family = "mono"),
axis.title = element_text(family="mono"))
#age vs risk correlated
#exercise vs risk med_cor
#age vs risk med_cor
#exercise vs risk random
#age vs risk random
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(lubridate)
library(janitor)
library(readr)
library(ggplot2)
library(dplyr)
library(tidymodels)
library(readxl)
library(purrr)
library(zoo)
library(ggmosaic)
library(probably)
library(rpart.plot)
library(vip)
library(zoo)
tidymodels_prefer()
# Importing Regression Data
daily_bikes_complete <- read_csv("Data/daily_bikes_complete.csv")
correlated %>%
mutate(preds = predict(#MOD NAME HERE)) %>%
ggplot(aes(x=age, y=(risk-preds)))+
geom_point()+
theme_classic()+
labs(y="residuals", title = "Age vs Residuals for strong correlation")+
theme(plot.title.position = "plot",
plot.title = element_text(family = "mono"),
axis.title = element_text(family="mono"))
shiny::runApp('Desktop/STAT 456/project/vivian-erin-456/project/pfas_final_app')
runApp('Desktop/STAT 456/project/vivian-erin-456/project/pfas_final_app')
runApp('Desktop/STAT 456/project/vivian-erin-456/project/pfas_final_app')
